name: Full CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1 : Exécuter les tests Maven avec JaCoCo et générer l'artifact back-coverage-report
  test-backend:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2 : Configurer Java
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Étape 3 : Exécuter les tests avec Maven et générer un rapport de couverture avec JaCoCo
      - name: Run Maven tests and JaCoCo
        run: mvn clean verify
        working-directory: back
      
      # Étape 4 : Sauvegarder les rapports JaCoCo comme artifact
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: back-coverage-report
          path: back/target/jacoco/jacoco.xml

  # Job 2 : Exécuter les tests Angular et générer l'artifact coverage-report
  test-frontend:
    runs-on: ubuntu-latest

    steps:
    #Étape 1 : Cloner le repository
      - name: Checkout repository
        uses: actions/checkout@v4

    #Étape 2 : Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

    # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install
        working-directory: front

    # Étape 4 : Exécuter les tests Angular avec Karma
      - name: Run Angular tests with Karma
        run: npm run test -- --watch=false --code-coverage
        working-directory: front

    # Étape 5 : Sauvegarder le rapport de couverture Angular comme artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage-report
          path: front/coverage/bobapp

  # Job 3 : Analyser avec SonarQube (s'exécute après les jobs de test-backend et test-frontend)
  build-and-sonar:
    runs-on: ubuntu-latest
    needs: 
      - test-backend
      - test-frontend  

    steps:
    # Étape 1 : Cloner le repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
    # Étape 2 : Configurer Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

    # Étape 3 : Compiler le backend avec Maven
      - name: Build with Maven
        run: mvn clean install
        working-directory: back

    # Étape 4 : Télécharger le rapport de couverture Angular
      - name: Download coverage report artifact
        uses: actions/download-artifact@v4
        with:
          name: front-coverage-report
          path: front/coverage/bobapp

    # Étape 5 : Vérifier l'existence du fichier lcov pour l’analyse SonarQube
      - name: Vérification génération fichier lcov
        run: ls -R ./front/coverage/bobapp

    # Étape 6 : Lancer l'analyse SonarQube
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args:
            -Dprojet.settings=sonar-project.properties
